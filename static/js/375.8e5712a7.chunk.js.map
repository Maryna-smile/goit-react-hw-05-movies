{"version":3,"file":"static/js/375.8e5712a7.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","components/services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled(Link)`\n  display: inline-block;\n  cursor: pointer;\n  margin-right: auto;\n  margin-top: 55px;\n  max-width: 150px;\n  text-align: center;\n  text-decoration: none;\n  color: #7bd4eb;\n  font-size: 25px;\n  font-weight: 500;\n  padding: 10px 15px;\n  border-radius: 10px;\n  box-shadow: 0 0 15px 1px #7bd4eb;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 400px;\n  height: 650px;\n  border-radius: 10px;\n  margin-bottom: 15px;\n  box-shadow: 0 0 10px 1px #7bd4eb;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 24px;\n  margin-bottom: 15px;\n`;\n\nexport const MovieGenres = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const MovieText = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const MovieCaptions = styled.h3`\n  margin-top: 15px;\n  margin-bottom: 10px;\n`;\n\nexport const FlexGeneral = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FlexWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const InnerUpFlex = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InnerDownFlex = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  gap: 25px;\n`;\n\nexport const ExtraButton = styled(Link)`\n  display: inline-block;\n  margin-top: 15px;\n  max-width: 150px;\n  text-align: center;\n  text-decoration: none;\n  color: #7bd4eb;\n  font-size: 25px;\n  font-weight: 500;\n  padding: 10px 15px;\n  border-radius: 10px;\n  box-shadow: 0 0 15px 1px #7bd4eb;\n`;\n","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { getMoviesByID } from '../services/api';\nimport {\n  Button,\n  ExtraButton,\n  FlexGeneral,\n  FlexWrapper,\n  InnerDownFlex,\n  InnerUpFlex,\n  MovieCaptions,\n  MovieGenres,\n  MoviePoster,\n  MovieText,\n  MovieTitle,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [film, setFilm] = useState({});\n  const prevLocation = useLocation();\n  const location = useRef(prevLocation);\n\n  useEffect(() => {\n    getMoviesByID(Number(movieId)).then(data => setFilm(data));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    overview,\n    genres,\n    vote_average,\n  } = film;\n\n  return (\n    <>\n      <FlexGeneral>\n        <FlexWrapper>\n          <MoviePoster\n            src={poster_path && `https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt={`poster of movie ${original_title}`}\n          />\n          <InnerUpFlex>\n            <MovieTitle>\n              {original_title} ({release_date && release_date.slice(0, 4)})\n            </MovieTitle>\n            <MovieText>\n              User score: {Math.ceil((vote_average * 100) / 10)} %\n            </MovieText>\n            <MovieCaptions>Overview</MovieCaptions>\n            <MovieText>{overview}</MovieText>\n            <MovieCaptions>Genres</MovieCaptions>\n            <MovieGenres>\n              {genres &&\n                genres.map(genre => {\n                  const { id, name } = genre;\n                  return <li key={id}>{name}</li>;\n                })}\n            </MovieGenres>\n            <Button to={location.current.state?.from ?? '/'}>Go back</Button>\n          </InnerUpFlex>\n        </FlexWrapper>\n        <InnerUpFlex>\n          <MovieCaptions>Additional information</MovieCaptions>\n          <InnerDownFlex>\n            <ExtraButton to=\"actors\">Cast</ExtraButton>\n            <ExtraButton to=\"reviews\">Reviews</ExtraButton>\n          </InnerDownFlex>\n          <Outlet />\n        </InnerUpFlex>\n      </FlexGeneral>\n    </>\n  );\n}\n","import axios from 'axios';\n\nexport async function getTrendingMovies(){\ntry {\n    const {data} = await axios.get('https://api.themoviedb.org/3/trending/movie/day?api_key=87b30e96836a8de3573742dd24a908fa')\n    return data;\n} catch (error) {\n    console.error(error);\n}\n}\n\n\nexport async function getQueryMovies(query){\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=87b30e96836a8de3573742dd24a908fa&language=en-US&page=1&include_adult=false&query=${query}`)\n        return data;\n    } catch (error) {\n        console.error(error);\n    }\n    }\n\n\nexport async function getMoviesByID(movieId){\n        try {\n            const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=87b30e96836a8de3573742dd24a908fa&language=en-US`)\n            return data;\n        } catch (error) {\n            console.error(error);\n        }\n        }\n\n        \nexport async function getCast(movieId){\n        try {\n            const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=87b30e96836a8de3573742dd24a908fa&language=en-US`)\n            return data;\n        } catch (error) {\n            console.error(error);\n        }\n        }\n\n                \nexport async function getReviews(movieId){\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=87b30e96836a8de3573742dd24a908fa&language=en-US&page=1`)\n        return data;\n    } catch (error) {\n        console.error(error);\n    }\n    }\n\n  \n    \n\n\n       \n"],"names":["Button","styled","Link","MoviePoster","MovieTitle","MovieGenres","MovieText","MovieCaptions","FlexGeneral","FlexWrapper","InnerUpFlex","InnerDownFlex","ExtraButton","MovieDetails","movieId","useParams","useState","film","setFilm","prevLocation","useLocation","location","useRef","useEffect","getMoviesByID","Number","then","data","poster_path","original_title","release_date","overview","genres","vote_average","src","alt","slice","Math","ceil","map","genre","id","name","to","current","state","from","getTrendingMovies","axios","console","error","getQueryMovies","query","getCast","getReviews"],"sourceRoot":""}